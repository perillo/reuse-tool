[project]
name = "reuse"
version = "5.0.2"
description = "reuse is a tool for compliance with the REUSE recommendations."
authors = [{ name = "Free Software Foundation Europe", email = "contact@fsfe.org" }]
requires-python = "~=3.9"
readme = "README.md"
license = "Apache-2.0 AND CC0-1.0 AND CC-BY-SA-4.0 AND GPL-3.0-or-later"
maintainers = [
    { name = "Carmen Bianca Bakker", email = "carmenbianca@fsfe.org" },
    { name = "Max Mehl", email = "max.mehl@fsfe.org" },
    { name = "Linus Sehn", email = "linus@fsfe.org" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "License :: DFSG approved",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
dependencies = [
    "Jinja2>=3.0.0",
    "binaryornot>=0.4.4",
    "boolean.py>=3.8",
    "license-expression>=1.0",
    "python-debian>=0.1.34,!=0.1.45,!=0.1.46,!=0.1.47",
    "tomlkit>=0.8",
    "attrs>=21.3",
    "click>=8.0",
]

[project.urls]
Homepage = "https://reuse.software/"
Repository = "https://github.com/fsfe/reuse-tool"
Documentation = "https://reuse.readthedocs.org/"

[project.scripts]
reuse = "reuse.cli.main:main"

[dependency-groups]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "freezegun>=1.0.0",
]
docs = [
    "Sphinx>=4.0.0",
    "myst-parser>=2.0.0",
    "sphinxcontrib-apidoc>=0.3.0",
    "furo>=2023.3.27",
]
dev = [
    "black>=20",
    "isort>=5.6.0",
    "pre-commit>=2.9.0",
    "bumpver>=2023.1129",
    "pylint>=2.12.2",
    "mypy>=1.0",
    "GitPython>=3.0",
    "protokolo>=2.1.0 ; python_version ~= '3.11'",
]
lsp = [
    "python-lsp-server",
    "pylsp-mypy",
    "pyls-isort",
    "python-lsp-black",
]

[tool.uv]
default-groups = [
    "test",
    "docs",
    "dev",
    "lsp",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/reuse",
    "tests",
    "po",
    "AUTHORS.rst",
    "README.md",
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    ".reuse",
    "REUSE.toml",
    "LICENSES",
    "docs",
]

[tool.hatch.build.targets.wheel]
include = [
    "src/reuse",
    "src/reuse/locale/**/*.mo",
]

[tool.hatch.build.targets.wheel.sources]
"src/reuse" = "reuse"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[bumpver]
current_version = "v5.0.2"
version_pattern = "vMAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version: {old_version} â†’ {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = false
push = false

[bumpver.file_patterns]
"pyproject.toml" = [
    '^version = "{pep440_version}"$',
    '^current_version = "{version}"$',
]
"src/reuse/__init__.py" = [
    '__version__ = "{pep440_version}"$',
]
"docs/conf.py" = [
    'release = "{pep440_version}"$',
]
"README.md" = [
    'rev: {version}$',
]

[tool.protokolo]
changelog = "CHANGELOG.md"
markup = "markdown"
directory = "changelog.d"

[tool.black]
line-length = 80

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 80

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.mypy]
files = [
    "src/reuse/**.py",
    "tests/**.py",
]
exclude = [
    '^_build\.py$',
    '^conf\.py$',
]

[[tool.mypy.overrides]]
module = "reuse.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "binaryornot.check",
    "boolean.boolean",
    "license_expression",
    "pkg_resources",
]
ignore_missing_imports = true
